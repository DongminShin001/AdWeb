{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Sidebar/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContainer = styled.div`\n  background-color: #212121;\n  color: white;\n  width: 250px;\n  padding: 20px;\n  position: sticky;\n  top: 0;\n  height: 100vh;\n  overflow-y: auto;\n`;\n_c = SidebarContainer;\nconst NewsList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = NewsList;\nconst NewsItemContainer = styled.div`\n  margin-bottom: 10px;\n  cursor: pointer;\n  background-color: ${({\n  $isActive\n}) => $isActive ? \"#444\" : \"transparent\"};\n  padding: 5px;\n  border-radius: 3px;\n  &:hover {\n    background-color: #444;\n  }\n`;\n_c3 = NewsItemContainer;\nconst DateHeader = styled.div`\n  color: #888;\n  font-size: 14px;\n  margin: 10px 0;\n  border-bottom: 1px solid #444;\n  padding-bottom: 5px;\n`;\n_c4 = DateHeader;\nconst NewsTitle = styled.div`\n  color: white;\n  font-size: 16px;\n`;\n_c5 = NewsTitle;\nconst Sidebar = ({\n  news,\n  onExpand,\n  expandedNewsId,\n  refs\n}) => {\n  _s();\n  useEffect(() => {\n    if (expandedNewsId) {\n      const ref = refs.current.sidebar[expandedNewsId];\n      if (ref) {\n        setTimeout(() => {\n          ref.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\"\n          });\n        }, 100);\n      }\n    }\n  }, [expandedNewsId, refs]);\n  return /*#__PURE__*/_jsxDEV(SidebarContainer, {\n    children: /*#__PURE__*/_jsxDEV(NewsList, {\n      children: news.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [index === 0 || item.date !== news[index - 1].date ? /*#__PURE__*/_jsxDEV(DateHeader, {\n          children: item.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(NewsItemContainer, {\n          ref: el => refs.current.sidebar[item.id] = el,\n          $isActive: item.id === expandedNewsId,\n          onClick: () => onExpand(item.id),\n          children: /*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c6 = Sidebar;\nexport default Sidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"SidebarContainer\");\n$RefreshReg$(_c2, \"NewsList\");\n$RefreshReg$(_c3, \"NewsItemContainer\");\n$RefreshReg$(_c4, \"DateHeader\");\n$RefreshReg$(_c5, \"NewsTitle\");\n$RefreshReg$(_c6, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","styled","jsxDEV","_jsxDEV","SidebarContainer","div","_c","NewsList","_c2","NewsItemContainer","$isActive","_c3","DateHeader","_c4","NewsTitle","_c5","Sidebar","news","onExpand","expandedNewsId","refs","_s","ref","current","sidebar","setTimeout","scrollIntoView","behavior","block","children","map","item","index","Fragment","date","fileName","_jsxFileName","lineNumber","columnNumber","el","id","onClick","title","_c6","$RefreshReg$"],"sources":["/app/src/components/Sidebar/Sidebar.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst SidebarContainer = styled.div`\n  background-color: #212121;\n  color: white;\n  width: 250px;\n  padding: 20px;\n  position: sticky;\n  top: 0;\n  height: 100vh;\n  overflow-y: auto;\n`;\n\nconst NewsList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NewsItemContainer = styled.div`\n  margin-bottom: 10px;\n  cursor: pointer;\n  background-color: ${({ $isActive }) => ($isActive ? \"#444\" : \"transparent\")};\n  padding: 5px;\n  border-radius: 3px;\n  &:hover {\n    background-color: #444;\n  }\n`;\n\nconst DateHeader = styled.div`\n  color: #888;\n  font-size: 14px;\n  margin: 10px 0;\n  border-bottom: 1px solid #444;\n  padding-bottom: 5px;\n`;\n\nconst NewsTitle = styled.div`\n  color: white;\n  font-size: 16px;\n`;\n\nconst Sidebar = ({ news, onExpand, expandedNewsId, refs }) => {\n  useEffect(() => {\n    if (expandedNewsId) {\n      const ref = refs.current.sidebar[expandedNewsId];\n      if (ref) {\n        setTimeout(() => {\n          ref.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n          });\n        }, 100);\n      }\n    }\n  }, [expandedNewsId, refs]);\n\n  return (\n    <SidebarContainer>\n      <NewsList>\n        {news.map((item, index) => (\n          <React.Fragment key={item.id}>\n            {index === 0 || item.date !== news[index - 1].date ? (\n              <DateHeader>{item.date}</DateHeader>\n            ) : null}\n            <NewsItemContainer\n              ref={(el) => (refs.current.sidebar[item.id] = el)}\n              $isActive={item.id === expandedNewsId}\n              onClick={() => onExpand(item.id)}\n            >\n              <NewsTitle>{item.title}</NewsTitle>\n            </NewsItemContainer>\n          </React.Fragment>\n        ))}\n      </NewsList>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}